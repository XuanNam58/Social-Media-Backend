version: '3.8'

services:
  discovery-server:
    image: xuannam01/discovery-server:0.0.1
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - lineta-network

  auth-service:
    image: xuannam01/auth-service:0.0.1
    container_name: auth-service
    ports:
      - "8080:8080"
    #    volumes:
    #      - ./auth-service/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lineta-network

  friend-service:
    image: xuannam01/friend-service:0.0.1
    container_name: friend-service
    ports:
      - "8081:8081"
    #    volumes:
    #      - ./friend-service/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      - discovery-server
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lineta-network

  interaction-service:
    image: xuannam01/interaction-service:0.0.1
    container_name: interaction-service
    ports:
      - "9000:9000"
    #    volumes:
    #      - ./friend-service/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lineta-network

  notification-service:
      image: xuannam01/notification-service:0.0.1
      container_name: notification-service
      ports:
        - "9001:9001"
      #    volumes:
      #      - ./friend-service/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
      depends_on:
        - discovery-server
      environment:
        - SPRING_PROFILES_ACTIVE=docker
      networks:
        - lineta-network

  message-service:
    image: xuannam01/message-service:0.0.1
    container_name: message-service
    ports:
      - "4000:4000"
    #    volumes:
    #      - ./friend-service/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lineta-network

  api-gateway:
    image: xuannam01/api-gateway:0.0.1
    container_name: api-gateway
    ports:
      - "9191:9191"
    #    volumes:
    #      - ./api-gateway/firebase/serviceAccountKey.json:/app/serviceAccountKey.json
    depends_on:
      - discovery-server
      - auth-service
      - friend-service
      - notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - lineta-network

  redis:
    image: redis:7.4.3
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - lineta-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_KRAFT_CLUSTER_ID=SATaCmhQQueGt6H3AT28Kw
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - lineta-network

#driver: bridge có nghĩa là nó sử dụng kiểu mạng mặc định "bridge",
#  tức là các container trong cùng network có thể giao tiếp với nhau bằng tên service
networks:
  lineta-network:
    driver: bridge
